{"version":3,"sources":["logo.svg","Profile.js","Gallery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Profile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","artist","name","followers","total","images","url","genres","react_default","a","createElement","className","alt","src","map","genre","i","length","concat","key","Component","Gallery","playingUrl","audio","playing","previewUrl","Audio","pause","setState","play","_this2","tracks","track","trackImg","album","onClick","playAudio","preview_url","App","query","TOKEN","FETCH_URL","fetch","method","headers","Authorization","then","response","json","error","console","log","artists","items","id","_this3","placeholder","value","onChange","event","target","onKeyPress","search","src_Profile","src_Gallery","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cda6408a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './App.css';\n\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    }\n  }\n\n  render() {\n\n    \n    let artist = { \n        name: '', \n        followers: { total: '' }, \n        images: [{url:''}], \n        genres:[] \n    };\n    \n    artist = this.props.artist !== null ? this.props.artist : artist;\n\n    return (\n        <div className=\"row profile\">\n            <div className=\"col-4\">\n                <img \n                    alt=\"profile\"\n                    className=\"img-fluid rounded-circle mx-auto profile-img\"\n                    src={artist.images[0].url}\n                />\n            </div>\n\n            <div className=\"col-8 text-center\">\n                <div> \n                    <h3>\n                        {artist.name} \n                    </h3>\n                </div>\n                \n                <div> \n                    Followers: {artist.followers.total}  \n                </div>\n\n                <div>\n                    {\n                        artist.genres.map( (genre,i) => {\n                            genre = genre !== artist.genres[artist.genres.length-1] \n                                          ? ` ${genre},` : ` & ${genre}`;\n\n                            return (\n                                <span key={i}>{genre}</span>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport './App.css';\n\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        playingUrl: '',\n        audio: null,\n        playing: false \n    }\n  }\n\n  playAudio(previewUrl) {\n    let audio = new Audio(previewUrl);\n\n    if(!this.state.playing) {\n        \n        audio.play();\n        \n        this.setState({\n            playing: true,\n            playingUrl: previewUrl,\n            audio: audio\n        });\n    } else {\n        if(this.state.playingUrl === previewUrl) {\n            this.state.audio.pause();\n            this.setState({\n                playing:false\n            });\n        } else {\n            this.state.audio.pause();\n            audio.play();\n            this.setState({\n                playing: true,\n                playingUrl: previewUrl,\n                audio: audio\n            });\n        }\n    }\n\n    \n\n  }\n\n  render() {\n\n    const tracks = this.props.tracks;\n\n    return (\n        <div className=\"row pt-5 pb-5\">\n            {\n                tracks.map( (track, i) => {\n                    \n                    const trackImg = track.album.images[0].url;\n\n                    return(\n                        <div key={i} className=\"col-4 pb-4\" onClick={()=>this.playAudio(track.preview_url)}>\n                            <img \n                                src={trackImg}\n                                alt=\"track\"\n                                className=\"img-fluid rounded\"\n                            />\n                            <div className=\"track-play\">\n                                <div className=\"track-play-inner\">\n                                    {\n                                        this.state.playingUrl === track.preview_url\n                                        ? <span>| |</span>\n                                        : <span>&#9654;</span>\n                                    }\n                                </div>\n                            </div>\n                            <p className=\"track-text text-center\">\n                                {track.name}\n                            </p>\n                        </div>\n                    )\n\n                })\n            }  \n        </div>\n    );\n  }\n}\n\nexport default Gallery;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\n\nimport Profile from './Profile.js';\nimport Gallery from './Gallery.js';\n\nimport './App.css';\n\n// FONT AWESOME STUFF - https://www.npmjs.com/package/@fortawesome/react-fontawesome\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: '',\n      artist: null,\n      tracks: null\n    }\n  }\n\n  search() {\n    //https://developer.spotify.com/console/get-search-item/?q=tania%20bowra&type=artist&market=&limit=&offset=\n\n    const TOKEN = 'BQDTNI1-Ce214a4QS_KsF6FXybIRgNE2JkQT5wOoxdpN4Fsz9g0F8maRK0pHsWXhgoYc7NjlD1EE8AUTCggTyxpFe1F3U5bxMjfQ8ayclzaIJTNTG1njgRJZ9YeVupyq-imoPckS2pEgz0Ej3NCl';\n\n\n    const BASE_URL = 'https://api.spotify.com/v1/search?';\n    const FETCH_URL = `${BASE_URL}q=${this.state.query}&type=artist&limit=1`;\n    const ALBUM_URL = `https://api.spotify.com/v1/artists`;\n\n    \n    fetch(FETCH_URL, {\n      method: 'GET',\n      headers: { 'Authorization': `Bearer ${TOKEN}` }\n    })\n    .then( response => response.json() )\n    .then( json => { \n\n      if(json.error) {\n        console.log('error ', json.error)\n        return\n      }\n      \n      console.log(json.artists.items[0])\n\n      const artist = json.artists.items[0]; //because we limit to 1 in query\n      this.setState({artist: artist});\n\n      let FETCH_URL = `${ALBUM_URL}/${artist.id}/top-tracks?country=US&`;\n      \n      fetch(FETCH_URL, {\n        method: 'GET',\n        headers: { 'Authorization': `Bearer ${TOKEN}` }\n      })\n      .then( response => response.json() )\n      .then( json => { \n        if(json.error) {\n          console.log('error ', json.error)\n          return\n        }\n        console.log(json)\n        const tracks = json.tracks;\n        this.setState({tracks: tracks});\n      })\n\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n\n        {/* Row 1 */}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1 className=\"text-center\">\n              Music Master\n            </h1>\n          </div>\n        </div>\n\n        {/* Row 2 */}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"input-group\">\n              <input \n                className=\"form-control\" \n                placeholder=\"Search for an artist ....\" \n                value={this.state.query} \n                onChange={ event => this.setState( { query: event.target.value }) }\n                onKeyPress={event => { if(event.key === \"Enter\") { this.search(); } }}\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" onClick={() => this.search()}>Search</button>\n                </div>\n            </div>\n          </div>\n        </div>\n        \n        \n        {/* Row 3 */}\n\n        {\n          this.state.artist !== null \n          ?\n            <Profile \n              artist={this.state.artist}\n            />\n          : \n            <div></div>\n        }\n        \n\n        {/* Row 4 */}\n\n        {\n          this.state.tracks !== null \n          ?\n            <Gallery \n              tracks={this.state.tracks}\n            /> \n          : \n            <div></div>\n        }\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}